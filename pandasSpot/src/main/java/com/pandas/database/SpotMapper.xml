<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SpotMapper">
	<!-- School -->
	<select id="SchoolList" resultType="com.pandas.model.Schools">
		select * from schools
	</select>
	<select id="FindSchool" parameterType="String"
		resultType="com.pandas.model.Schools">
		select * from schools where SCHOOL_NAME LIKE '%' || #{name}
		|| '%'
	</select>
	<select id="FindSchoolNum"
		parameterType="com.pandas.model.Schools" resultType="Double">
		select SCHOOL_IDX
		from SCHOOLS where SCHOOL_NAME = #{school_name} and SCHOOL_REGION =
		#{school_region}
	</select>
	
	<select id="FindSchoolName" resultType="String" parameterType="Double">
		SELECT SCHOOL_NAME FROM SCHOOLS WHERE SCHOOL_IDX = #{SCHOOL_IDX}
	</select>
	
	<select id="FindSchoolInfo"	resultType="com.pandas.model.Schools">
		SELECT * FROM SCHOOLS WHERE SCHOOL_IDX = #{SCHOOL_IDX}
	</select>

	<!-- Diary -->
	<select id="DiaryList" resultType="com.pandas.model.Diaries">
		select * from diaries order by diary_idx
	</select>
	<!-- Diary 글 불러오기 -->
	<select id="getDiary" parameterType="int"
		resultType="com.pandas.model.Diaries">
		select * from diaries where DIARY_IDX=#{idx}
	</select>
	
	<select id="MyPostList" parameterType="String" resultType="com.pandas.model.Diaries">
		select * from diaries where mem_id = #{mem_id}
		
	</select>

	<!-- Community -->
	<select id="CommunityList"
		resultType="com.pandas.model.Communities">
		select * from communities order by comm_idx
	</select>
	<!-- Community 글 불러오기 -->
	<select id="getCommunities" parameterType="int"
		resultType="com.pandas.model.Communities">
		select * from communities where COMM_IDX=#{idx}
	</select>

	<!-- Question -->
	<select id="QuestionList"
		resultType="com.pandas.model.Questions">
		select * from questions order by q_idx
	</select>
	<!-- Question 글 불러오기 -->
	<select id="getQuestion" resultType="com.pandas.model.Questions">
		select * from questions where Q_IDX=#{idx}
	</select>

	<!-- Member -->
	<insert id="join" parameterType="com.pandas.model.Members">
		INSERT INTO MEMBERS(MEM_ID,
		MEM_PW, MEM_NAME, MEM_NICK, MEM_BIRTHDATE, MEM_SCHOOL,
		MEM_PROFILE_IMG) VALUES (#{mem_id}, #{mem_pw}, #{mem_name},
		#{mem_nick}, #{mem_birthdate}, #{mem_school}, #{mem_profile_img})
	</insert>
	<select id="login" parameterType="com.pandas.model.Members"
		resultType="com.pandas.model.Members">
		SELECT * FROM MEMBERS WHERE MEM_ID = #{mem_id} AND MEM_PW =
		#{mem_pw}
	</select>
	
	<select id="FindId" parameterType="String" resultType="com.pandas.model.Members">
		SELECT * FROM MEMBERS WHERE MEM_ID = #{mem_id}
	</select>
	
	<insert id="update" parameterType="com.pandas.model.Members">
		UPDATE MEMBERS SET MEM_PW = #{mem_pw}, MEM_NAME = #{mem_name}, MEM_NICK = #{mem_nick}, MEM_BIRTHDATE = #{mem_birthdate}, MEM_SCHOOL = #{mem_school},
		MEM_PROFILE_IMG = #{mem_profile_img} WHERE MEM_ID = #{mem_id}
	</insert>
	
	<select id="FindMembersById" parameterType="String" resultType="com.pandas.model.Members">
		select * from MEMBERS where mem_id like '%' || #{mem_id} || '%'
	</select>

	<!-- Community 등록 -->
	<insert id="CommunityPost" parameterType="com.pandas.model.Communities">
		INSERT INTO
		COMMUNITIES(COMM_TITLE,COMM_CONTENT,COMM_FILE,MEM_ID)
		VALUES (#{comm_title}, #{comm_content}, #{comm_file}, #{mem_id})
		
	</insert>
	
	<!-- Studies List 불러오기 -->
	<select id="StudyList" resultType="com.pandas.model.Studies">
  	 	 SELECT * FROM STUDIES ORDER BY STUDY_IDX ASC
	</select>
	<!-- Studies 등록 -->
	<insert id="Studing" parameterType="com.pandas.model.Studies">
  	 	 INSERT INTO
   		 STUDIES( STUDY_CONTENT, STUDY_PHOTO, MEM_ID)
  		 VALUES ( #{Study_content}, #{Study_photo}, #{Mem_id})
	</insert>
	<!-- Studies 글 불러오기  -->
	<select id="getStudies" parameterType="int" resultType="com.pandas.model.Studies">
  	 	 SELECT * FROM STUDIES WHERE STUDY_IDX = #{idx}
	</select>

	<update id=""></update>
	
	<!-- Question 등록 -->
	<insert id="QuestionPost" parameterType="com.pandas.model.Questions">
		INSERT INTO QUESTIONS(Q_TITLE,Q_CONTENT,Q_FILE,MEM_ID,Q_WORKBOOK)
		VALUES (#{q_title}, #{q_content}, #{q_file}, #{mem_id}, #{q_workbook})
	</insert>
	
	<!-- Diary 등록 -->
	<insert id="DiaryPost" parameterType="com.pandas.model.Diaries">
			INSERT INTO DIARIES(DIARY_TITLE,DIARY_CONTENT,MEM_ID)
			VALUES (#{diary_title}, #{diary_content}, #{mem_id} )
	</insert>
	
	<!-- Diary 수정 -->
	<update id="DiaryUpdate" parameterType="com.pandas.model.Diaries">
		update diaries set diary_title=#{diary_title} , diary_content=#{diary_content} where diary_idx=#{diary_idx}
	</update>
	
	
	<!-- followings -->
	<select id="getFollowers" parameterType="String" resultType="String" >
		select follower_id from followings where FOLLOWING_ID = #{mem_id}
	</select>
	
	<select id="getFollowings" parameterType="String" resultType="String" >
		select FOLLOWING_ID from followings where follower_id = #{mem_id}
	</select>
	
	<insert id="Follow" parameterType="com.pandas.model.Followings">
		insert into followings(following_id, follower_id) values (#{following_id}, #{follower_id})
	</insert>
	<delete id="unFollow" parameterType="com.pandas.model.Followings">
		delete from followings where following_id = #{following_id} and follower_id = #{follower_id}
	</delete>

	<!-- comments -->
	<select id="CommCommentList" resultType="com.pandas.model.CommComments">
		select * from community_comments
	</select>
	<insert id="CommNewComment" parameterType="com.pandas.model.CommComments">
		INSERT INTO community_comments (comm_idx, cmt_content, mem_id) VALUES (#{comm_idx}, #{cmt_content}, #{mem_id})
	</insert>
	
	<update id="CommCommentLikes">
		update community_comments set cmt_likes+1 where CMT_IDX = #{cmt_idx}
	</update>
	
	<update id="CommCommentUnlikes">
		update community_comments set cmt_likes-1 where CMT_IDX = #{cmt_idx}
	</update>
</mapper> 